// Code generated by mockery 2.7.4. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// ScriptDo provides a mock function with given fields: ctx, script, keys, args
func (_m *Service) ScriptDo(ctx context.Context, script string, keys []string, args ...interface{}) (interface{}, error) {
	var _ca []interface{}
	_ca = append(_ca, ctx, script, keys)
	_ca = append(_ca, args...)
	ret := _m.Called(_ca...)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(context.Context, string, []string, ...interface{}) interface{}); ok {
		r0 = rf(ctx, script, keys, args...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, []string, ...interface{}) error); ok {
		r1 = rf(ctx, script, keys, args...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
